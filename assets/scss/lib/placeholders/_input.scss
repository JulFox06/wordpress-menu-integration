// # Input fields config placeholders.

@use "../functions/px-to-rem" as *;
@use "animated" as *;
@use "interactive" as *;
@use "../variables/color";
@use "../variables/font";

// Should be applied on every input base visual component, and updated with CSS variables on specific cases.

// The idea here is to have a consistent and a more interactive/dynamic UI/UX.
// Usage example :
// ```scss
// @use "functions/px-to-rem" as *;
// @use "placeholders/input" as *;
// @use "variables/color";
//
// input[type="text"] {
//   @extends %input;
//
//   --input-padding-left: #{px-to-rem(20px)};
//   --input-padding-right: #{px-to-rem(20px)};
//   --input-color: #{color.$blue};
//   --input-color-hover: #{color.$blue-dark};
//   --input-color-hover-focus-visible: #{color.$blue-dark};
//   --input-color-focus-visible: #{color.$blue-light};
//   --input-color-active: #{color.$blue};
// }
// ```

// Please update, add or remove the styles below to match the project needs.

%input {
  @extend %animated;
  @extend %interactive;

  // Color styles
  color: var(--input-color, #{color.$black});
  background-color: var(--input-background-color, #{color.$white});
  border-color: var(--input-border-color, #{color.$grey});

  // Border styles
  border-style: var(--input-border-style, solid);
  border-radius: var(
      --input-border-top-left-radius,
      var(--input-border-radius, 0px)
    )
    var(--input-border-top-right-radius, var(--input-border-radius, 0px))
    var(--input-border-bottom-right-radius, var(--input-border-radius, 0px))
    var(--input-border-bottom-left-radius, var(--input-border-radius, 0px));
  border-width: var(
      --input-border-top-width,
      var(--input-border-width, #{px-to-rem(2px)})
    )
    var(
      --input-border-right-width,
      var(--input-border-width, #{px-to-rem(2px)})
    )
    var(
      --input-border-bottom-width,
      var(--input-border-width, #{px-to-rem(2px)})
    )
    var(--input-border-left-width, var(--input-border-width, #{px-to-rem(2px)}));

  // Font styles
  text-align: var(--input-text-align, left);
  font-size: var(--input-font-size, inherit);
  font-weight: var(--input-font-weight, normal);
  line-height: var(--input-line-height, inherit);

  // Text styles
  text-transform: var(--input-text-transform, none);

  // Spacing styles
  padding: var(
      --input-padding-top,
      var(--input-padding-block, #{px-to-rem(10px)})
    )
    var(--input-padding-right, var(--input-padding-inline, #{px-to-rem(20px)}))
    var(--input-padding-bottom, var(--input-padding-block, #{px-to-rem(10px)}))
    var(--input-padding-left, var(--input-padding-inline, #{px-to-rem(20px)}));
  margin: var(--input-margin-top, var(--input-margin-block, 0px))
    var(--input-margin-right, var(--input-margin-inline, 0px))
    var(--input-margin-bottom, var(--input-margin-block, 0px))
    var(--input-margin-left, var(--input-margin-inline, 0px));

  // Size styles
  min-width: var(--input-min-width, 0px);
  min-height: var(--input-min-height, 0px);
  width: var(--input-width, 100%);
  height: var(--input-height, auto);
  max-width: var(--input-max-width, unset);
  max-height: var(--input-max-height, unset);

  // --------------------------------------------------
  // Pseudo selector styles
  // --------------------------------------------------

  &::placeholder {
    // Color styles
    color: var(--input-placeholder-color, #{color.$black});

    // Font styles
    text-align: var(--input-placeholder-text-align, inherit);
    font-size: var(--input-placeholder-font-size, inherit);
    font-weight: var(--input-placeholder-font-weight, inherit);
    line-height: var(--input-placeholder-line-height, inherit);

    // Text styles
    text-transform: var(--input-placeholder-text-transform, inherit);
  }

  &:focus-visible {
    color: var(--input-color-focus-visible, #{color.$black});
    background-color: var(
      --input-background-color-focus-visible,
      #{color.$white}
    );
    border-color: var(--input-border-color-focus-visible, #{color.$grey});
  }

  &:hover {
    color: var(--input-color-hover, #{color.$black});
    background-color: var(--input-background-color-hover, #{color.$white});
    border-color: var(--input-border-color-hover, #{color.$black});
  }

  &:active {
    color: var(--input-color-active, #{color.$black});
    background-color: var(--input-background-color-active, #{color.$white});
    border-color: var(--input-border-color-active, #{color.$black});
  }

  &:disabled,
  &[disabled] {
    //
  }
}
